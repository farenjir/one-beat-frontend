import React, { FC, ReactNode, useRef, useState } from "react";
import { createCache, extractStyle, StyleProvider } from "@ant-design/cssinjs";
import { useServerInsertedHTML } from "next/navigation";

// *** https://github.com/ant-design/nextjs-registry/blob/main/src/AntdRegistry.tsx

const AntdRegistry: FC<{ children: ReactNode }> = ({ children }) => {
	const [cache] = useState(() => createCache());
	const inserted = useRef(false);
	// useServerInsertedHTML
	useServerInsertedHTML(() => {
		const styleText = extractStyle(cache, { plain: true });
		// check
		if (inserted.current) {
			return null;
		}
		inserted.current = true;
		// return JSX
		return (
			<style
				id="antd-cssinjs"
				// to make sure this style is inserted before Ant Design's style generated by client
				// data-rc-order="prepend"
				data-rc-priority="-1000"
				dangerouslySetInnerHTML={{ __html: styleText }}
			/>
		);
	});
	// return
	return <StyleProvider cache={cache}>{children}</StyleProvider>;
};

export default AntdRegistry;

// *** "@ant-design/cssinjs": "^1.17.5",

// import React from "react";
// import { createCache, extractStyle, StyleProvider } from "@ant-design/cssinjs";
// import type Entity from "@ant-design/cssinjs/es/Cache";
// import { useServerInsertedHTML } from "next/navigation";

// const StyledComponentsRegistry = ({ children }: React.PropsWithChildren) => {
// 	const cache = React.useMemo<Entity>(() => createCache(), []);
// 	const isServerInserted = React.useRef<boolean>(false);
// 	useServerInsertedHTML(() => {
// 		// avoid duplicate css insert
// 		if (isServerInserted.current) {
// 			return;
// 		}
// 		isServerInserted.current = true;
// 		return <style id="antd" dangerouslySetInnerHTML={{ __html: extractStyle(cache, true) }} />;
// 	});
// 	return <StyleProvider cache={cache}>{children}</StyleProvider>;
// };

// export default StyledComponentsRegistry;
